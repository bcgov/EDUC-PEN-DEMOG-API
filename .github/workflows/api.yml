name: API CI

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'Feature/**'
      - 'fix/*'
      - 'Fix/*'
    paths:
      - 'api/src/**'
  deployment:
    branches:
      - master
      - 'feature/**'
      - 'Feature/**'
      - 'fix/*'
      - 'Fix/*'

env:
  DEV: c2mvws-dev
  TOOLS: c2mvws-tools
  REPO_NAME: educ-pen-demog-api
  JOB_NAME: master
  APP_NAME: pen-demographics-api
  APP_DOMAIN: pathfinder.gov.bc.ca
  DEV_TAG: dev

jobs:
  test:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: api

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn -f pom.xml clean test
      - name: Run Sonar Analysis
        run: mvn -f pom.xml sonar:sonar
          -Dsonar.login=${{ secrets.SONAR_LOGIN }}
          -Dsonar.host.url=${{ secrets.SONAR_HOST }}

      - run: mvn -f pom.xml -Dmaven.test.skip=true package
      - name: OpenShift Action
        uses: redhat-developer/openshift-actions@v2.0
        with:
          version: '3.11.216'
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT_API_TOKEN }}", "acceptUntrustedCerts": "true"}'
          cmd: |
            'project ${TOOLS}'
            'delete bc ${REPO_NAME}-${JOB_NAME}'
            'new-build --name=${REPO_NAME}-${JOB_NAME} --image-stream=redhat-openjdk18-openshift:1.1 --binary'
            'start-build ${REPO_NAME}-${JOB_NAME} --from-file=./api/target/pendemog-api-0.0.1-SNAPSHOT.jar --wait'
            'project ${DEV}'
            'tag ${TOOLS}/${REPO_NAME}-${JOB_NAME}:latest ${REPO_NAME}-${JOB_NAME}:${DEV_TAG}'
            'process -f ../tools/openshift/api.dc.yaml -p REPO_NAME=${REPO_NAME} -p JOB_NAME=${JOB_NAME} -p NAMESPACE=${DEV} -p APP_NAME=${APP_NAME} -p HOST_ROUTE=${APP_NAME}-${DEV}.${APP_DOMAIN} -p TAG=${DEV_TAG}'
            'apply -f -'
            'rollout status dc --watch=true'

